# Copyright 2023 The SapientML Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Testing

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - '*.*.*'

env:
  POETRY_VERSION: "1.5.1"
  POETRY_URL: https://install.python-poetry.org

jobs:  
  test:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        version: ["3.10", "3.11"]
        test: [test_sapientml_works_with, test_sapientml_raises_error, test_misc,
          test_regressor_works_number, test_regressor_works_with_nosparse,
          test_classifier_category_binary_num_noproba, test_classifier_category_binary_num_proba,
          test_classifier_category_multi_nonnum_metric_noproba, test_classifier_category_multi_nonnum_metric_proba,
          test_classifier_category_binary_boolean_metric_noproba, test_classifier_category_binary_boolean_metric_proba,
          test_classifier_category_binary_num_use_proba_with_metric_default_noproba, test_classifier_category_multi_nonnum_noproba_metric_with_proba,
          test_classifier_notext_nonegative_explanatry, test_classifier_works_with,
          test_explain
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Cache Poetry cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pypoetry
      #     key: poetry-cache-${{ matrix.os }}-${{ matrix.version }}-${{ env.POETRY_VERSION }}

      # - name: Cache Packages
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.local
      #     key: poetry-${{ matrix.os }}-${{ matrix.version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Set up Python ${{ matrix.version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.version }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install mecab
        run: sudo apt install -y mecab libmecab-dev mecab-ipadic-utf8

      - name: Set up mecab
        run: sudo cp /etc/mecabrc /usr/local/etc/

      - name: Install Packages
        run: sudo apt install -y graphviz

      - name: Install Dependencies
        run: poetry install

      - name: Pytest
        run: poetry run -- pytest -k ${{ matrix.test }}
  additional_test:
    if: github.event_name == 'push'
    strategy:
      matrix:
        version: ["3.10", "3.11"]
        test: [test_additional_misc,
          test_additional_regressor_works_number, test_additional_regressor_works_with_nosparse,
          test_additional_classifier_category_binary_nonnum_noproba, test_additional_classifier_category_binary_nonnum_proba,
          test_additional_classifier_category_binary_num_noproba, test_additional_classifier_category_binary_num_proba,
          test_additional_classifier_category_multi_nonnum_metric_noproba, test_additional_classifier_category_multi_nonnum_metric_proba,
          test_additional_classifier_category_multi_num_metric_noproba, test_additional_classifier_category_multi_num_metric_proba,
          test_additional_classifier_category_binary_boolean_metric_noproba, test_additional_classifier_category_binary_boolean_metric_proba,
          test_additional_classifier_category_binary_num_use_proba_with_metric_default_noproba, test_additional_classifier_category_multi_nonnum_noproba_metric_with_proba,
          test_additional_classifier_works_with
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.version }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install mecab
        run: sudo apt install -y mecab libmecab-dev mecab-ipadic-utf8

      - name: Set up mecab
        run: sudo cp /etc/mecabrc /usr/local/etc/

      - name: Install Packages
        run: sudo apt install -y graphviz

      - name: Install Dependencies
        run: poetry install

      - name: Pytest
        run: poetry run -- pytest -k ${{ matrix.test }}
